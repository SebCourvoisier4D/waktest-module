var CSVLogger = function() {	var _this = this;	_this.output = [];	_this.add = function(msg, separator) {		if (typeof separator === 'undefined') separator = ',';		if (typeof msg === 'object') {			if (typeof msg.join === 'function') msg = msg.join(separator);			else {				var header = [];				var values = [];				for (var i in msg) {					header.push(i);					values.push(msg[i]);				}				_this.output.push(header.join(separator));				msg = values.join(separator);			}		}		_this.output.push(msg);		return _this;	};	_this.dump = function(withHeaderAndFooter) {		if (typeof withHeaderAndFooter === 'undefined') withHeaderAndFooter = true;		if (withHeaderAndFooter === true) console.log('"---begin---"');		console.log(_this.output.join('\n'));		if (withHeaderAndFooter === true) return '---end---';	};	_this.dumpFile = function(filename, withHeaderAndFooter) {		if (typeof withHeaderAndFooter === 'undefined') withHeaderAndFooter = false;		try {			var file = new File(filename);			try {				file.create();			} catch (ignore) {}			var stream = TextStream(file, 'overwrite');			if (withHeaderAndFooter === true) stream.write('"---begin---"');			stream.write(_this.output.join('\n'));			if (withHeaderAndFooter === true) stream.write('"---end---"\n');			stream.close();		} catch (e) {			console.log(e);		}	};	return _this;};var _envVars = null;var getEnv = function(varName) {	if (_envVars === null) {		_envVars = process.env;	}	if (typeof varName === 'string') return _envVars[varName];	return _envVars;};